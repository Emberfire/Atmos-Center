@model IEnumerable<MovieViewModel>

@{
    ViewData["Title"] = "Movies";
}

@*
    
*@

<nav class="sidebar">
    <ul class="sidebar-content">
        <li class="sidebar-item">
            <img class="img-responsive" src="~/atmos.png" alt="Logo" width="60" height="60" />
        </li>
        <li class="sidebar-item">
            <h2 class="title">Atmos</h2>
        </li>
        <li class="sidebar-item drawer-expand">
            <button id="expand-drawer-button" type="button"><i class="fas fa-angle-double-left"></i></button>
        </li>
    </ul>
</nav>
<div class="drawer">
    <div class="drawer-content">
        <h2 class="title">Atmos</h2>
        <input id="pin-drawer" class="drawer-checkbox" style="position: absolute; top: 5px; right: 5px;" type="checkbox" title="Pin drawer" />
        <button id="rescan-button" class="drawer-button" type="button" style="margin-top: auto;">Rescan</button>
    </div>
</div>
<main class="main">
    <div class="movies-content">
        @foreach (MovieViewModel movie in Model)
        {
            <a href="@Url.Action("Watch", "Home", new { id = movie.Id })" class="thumbnail">
                @movie.Title
            </a>
        }
    </div>
</main>
<button class="scroll-to-top hidden" type="button"><i class="fas fa-arrow-alt-circle-up"></i> Scroll to top</button>
@section scripts {
    <script defer>
        const drawer = document.querySelector(".drawer");
        const pinDrawerCheckbox = document.getElementById("pin-drawer");
        const moviesContainer = document.querySelector(".movies-content");
        const scrollToTopButton = document.querySelector(".scroll-to-top");
        const drawerToggleButton = document.getElementById("expand-drawer-button");
        const sidebar = document.querySelector(".sidebar");

        scrollToTopButton.addEventListener("click", function () {
            moviesContainer.scrollTo({ top: 0, behavior: "smooth" });
        }, { passive: true });

        // Scroll listener for scroll to top button
        moviesContainer.closest(".main").addEventListener("scroll", function () {
            if (moviesContainer.closest(".main").scrollTop >= 400) {
                scrollToTopButton.classList.remove("hidden");
            } else {
                scrollToTopButton.classList.add("hidden");
            }
        }, { passive: true });

        document.getElementById("rescan-button").addEventListener("click", function () {
            $.ajax({
                url: "/Home/Rescan",
                type: "GET",
                success: function () {
                    alert("Successfully rescanned the folder");
                    window.location.reload();
                },
                error: function () {
                    alert("Failed to rescan the folder");
                    window.location.reload();
                }
            });
        });

        // Sidebar drawer toggle
        pinDrawerCheckbox.addEventListener("click", function () {
            drawer.classList.toggle("pinned");

            localStorage.setItem("sideDrawerExpanded", drawer.classList.contains("pinned"));
        });

        if (localStorage.getItem("sideDrawerExpanded") === "true") {
            drawer.classList.add("pinned");
            pinDrawerCheckbox.checked = true;
        }

        drawerToggleButton.addEventListener("click", function () {
            drawer.classList.toggle("expanded");
            drawerToggleButton.classList.toggle("expanded");
        })
    </script>
}
